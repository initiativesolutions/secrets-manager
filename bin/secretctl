#!/usr/bin/env php
<?php

namespace Composer;

use SecretsManager\Actions\SecretsActionInterface;
use SecretsManager\Actions\SecretsDelete;
use SecretsManager\Actions\SecretsEncryption;
use SecretsManager\Actions\SecretsKeyGenerator;
use SecretsManager\Actions\SecretsList;
use SecretsManager\Actions\SecretsRotation;
use SecretsManager\SecretsCommandLine;

require_once './vendor/autoload.php';

$cli = new SecretsCommandLine($argv);
/** @var SecretsActionInterface|null $action */
$action = null;

switch ($cli->getAction()) {
    case "keygen":
        $action = new SecretsKeyGenerator($cli);
        break;
    case "rotate":
        $action = new SecretsRotation($cli);
        break;
    case "encrypt":
        $action = new SecretsEncryption($cli);
        break;
    case "list":
        $action = new SecretsList($cli);
        break;
    case "delete":
        $action = new SecretsDelete($cli);
        break;
    case "help":
        $cli->write("help"); // todo : implement it
        break;
    default:
        $cli->error("Bad action or missing\n\t-> run : bin/secretctl help");
}

if ($action instanceof SecretsActionInterface) {
    try {
        $action->run();
    } catch (\Exception $e) {
        $cli->error($e->getMessage());
    }
}